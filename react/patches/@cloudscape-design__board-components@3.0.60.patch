diff --git a/board/interfaces.d.ts b/board/interfaces.d.ts
index 8833051d82fdfa2caea90018f88d607d2f598e74..4c47c4d044a4c12d9de6ba675711220f8a5cf5a4 100644
--- a/board/interfaces.d.ts
+++ b/board/interfaces.d.ts
@@ -65,6 +65,7 @@ export interface BoardProps<D = DataFallbackType> {
      * When items are loading the slot can be used to render the loading indicator.
      */
     empty: ReactNode;
+    className?: String;
 }
 export declare namespace BoardProps {
     type Item<D = DataFallbackType> = BoardItemDefinition<D>;
diff --git a/board/internal.js b/board/internal.js
index 39c479f6f060dc1f447acfdd542d5c3d6a8e4442..6e4e4a981941f5d35d2c08792654a7893bfde834 100644
--- a/board/internal.js
+++ b/board/internal.js
@@ -22,7 +22,7 @@ import { selectTransitionRows, useTransition } from "./transition";
 import { announcementToString } from "./utils/announcements";
 import { createTransforms } from "./utils/create-transforms";
 import { createItemsChangeEvent } from "./utils/events";
-export function InternalBoard({ items, renderItem, onItemsChange, empty, i18nStrings, __internalRootRef, ...rest }) {
+export function InternalBoard({ className, items, renderItem, onItemsChange, empty, i18nStrings, __internalRootRef, ...rest }) {
     var _a, _b;
     const containerAccessRef = useRef(null);
     const [currentColumns, containerQueryRef] = useContainerColumns();
@@ -161,7 +161,7 @@ export function InternalBoard({ items, renderItem, onItemsChange, empty, i18nStr
     const announcement = transitionAnnouncement
         ? announcementToString(transitionAnnouncement, items, i18nStrings, itemsLayout.columns)
         : "";
-    return (_jsxs("div", { ref: __internalRootRef, ...getDataAttributes(rest), children: [_jsx(ScreenReaderGridNavigation, { items: items, itemsLayout: itemsLayout, ariaLabel: i18nStrings.navigationAriaLabel, ariaDescription: i18nStrings.navigationAriaDescription, itemAriaLabel: i18nStrings.navigationItemAriaLabel, onActivateItem: focusItem }), _jsx("div", { ref: containerRef, className: clsx(styles.root, { [styles.empty]: rows === 0 }), children: rows > 0 ? (_jsx(Grid, { columns: itemsLayout.columns, layout: [...placeholdersLayout.items, ...itemsLayout.items], children: (gridContext) => {
+    return (_jsxs("div", { ref: __internalRootRef, ...getDataAttributes(rest), children: [_jsx(ScreenReaderGridNavigation, { items: items, itemsLayout: itemsLayout, ariaLabel: i18nStrings.navigationAriaLabel, ariaDescription: i18nStrings.navigationAriaDescription, itemAriaLabel: i18nStrings.navigationItemAriaLabel, onActivateItem: focusItem }), _jsx("div", { ref: containerRef, className: clsx(styles.root + (className?` ${className}`:'') , { [styles.empty]: rows === 0 }), children: rows > 0 ? (_jsx(Grid, { columns: itemsLayout.columns, layout: [...placeholdersLayout.items, ...itemsLayout.items], children: (gridContext) => {
                         var _a;
                         const layoutShift = (_a = transition === null || transition === void 0 ? void 0 : transition.layoutShift) !== null && _a !== void 0 ? _a : removeTransition === null || removeTransition === void 0 ? void 0 : removeTransition.layoutShift;
                         const transforms = layoutShift ? createTransforms(itemsLayout, layoutShift.moves, gridContext) : {};
diff --git a/board/styles.css.js b/board/styles.css.js
index 0cad188b9aa6c0c6ccdb3ccf7da69d21810332bb..6acfdb26bd1fd269d0d6f421282eca6f9fd639bd 100644
--- a/board/styles.css.js
+++ b/board/styles.css.js
@@ -1,9 +1,9 @@
 
     import './styles.scoped.css';
     export default {
-  "placeholder": "awsui_placeholder_1h7dk_inx8o_1",
-  "placeholder--active": "awsui_placeholder--active_1h7dk_inx8o_5",
-  "placeholder--hover": "awsui_placeholder--hover_1h7dk_inx8o_8",
+  "placeholder": "awsui_placeholder_1h7dk_inx8o_1 bai_board_placeholder",
+  "placeholder--active": "awsui_placeholder--active_1h7dk_inx8o_5 bai_board_placeholder--active",
+  "placeholder--hover": "awsui_placeholder--hover_1h7dk_inx8o_8 bai_board_placeholder--hover",
   "root": "awsui_root_1h7dk_inx8o_12",
   "empty": "awsui_empty_1h7dk_inx8o_16"
 };
diff --git a/board/styles.selectors.js b/board/styles.selectors.js
index be32160b170a3e025133ca909f7fc2ed0b4c9a5a..eea1a961905bd63a1b81bae6b774a84ee34a4ac9 100644
--- a/board/styles.selectors.js
+++ b/board/styles.selectors.js
@@ -2,9 +2,9 @@
     // es-module interop with Babel and Typescript
     Object.defineProperty(exports, "__esModule", { value: true });
     module.exports.default = {
-  "placeholder": "awsui_placeholder_1h7dk_inx8o_1",
-  "placeholder--active": "awsui_placeholder--active_1h7dk_inx8o_5",
-  "placeholder--hover": "awsui_placeholder--hover_1h7dk_inx8o_8",
+  "placeholder": "awsui_placeholder_1h7dk_inx8o_1 bai_board_placeholder",
+  "placeholder--active": "awsui_placeholder--active_1h7dk_inx8o_5 bai_board_placeholder--active",
+  "placeholder--hover": "awsui_placeholder--hover_1h7dk_inx8o_8 bai_board_placeholder--hover",
   "root": "awsui_root_1h7dk_inx8o_12",
   "empty": "awsui_empty_1h7dk_inx8o_16"
 };
diff --git a/board-item/interfaces.d.ts b/board-item/interfaces.d.ts
index 7451c23943846d46ee2e44f0a4cd42e817c5e279..2f0221c21a6e88e509ca1fa04e9f801562616f4d 100644
--- a/board-item/interfaces.d.ts
+++ b/board-item/interfaces.d.ts
@@ -31,6 +31,7 @@ export interface BoardItemProps {
      * * `resizeHandleAriaDescription` (string, optional) - the ARIA description for the resize handle.
      */
     i18nStrings: BoardItemProps.I18nStrings;
+    className?: string;
 }
 export declare namespace BoardItemProps {
     interface I18nStrings {
diff --git a/board-item/internal.js b/board-item/internal.js
index 9ce96efb6b78053be6c29b4ab98115e465c02372..cd0a89e0e5f5b092ba03ff191c720d29527ea8ce 100644
--- a/board-item/internal.js
+++ b/board-item/internal.js
@@ -11,12 +11,12 @@ import ResizeHandle from "../internal/resize-handle";
 import ScreenreaderOnly from "../internal/screenreader-only";
 import WidgetContainerHeader from "./header";
 import styles from "./styles.css.js";
-export function InternalBoardItem({ children, header, settings, disableContentPaddings, footer, i18nStrings, __internalRootRef, ...rest }) {
+export function InternalBoardItem({ className, children, header, settings, disableContentPaddings, footer, i18nStrings, __internalRootRef, ...rest }) {
     const { dragHandle, resizeHandle, isActive } = useItemContext();
     const dragHandleAriaLabelledBy = useId();
     const dragHandleAriaDescribedBy = useId();
     const resizeHandleAriaLabelledBy = useId();
     const resizeHandleAriaDescribedBy = useId();
-    return (_jsxs("div", { ref: __internalRootRef, className: styles.root, ...getDataAttributes(rest), children: [_jsx(Container, { fitHeight: true, disableHeaderPaddings: true, header: _jsx(WidgetContainerHeader, { handle: _jsx(DragHandle, { ref: dragHandle.ref, ariaLabelledBy: dragHandleAriaLabelledBy, ariaDescribedBy: dragHandleAriaDescribedBy, onPointerDown: dragHandle.onPointerDown, onKeyDown: dragHandle.onKeyDown, isActive: dragHandle.isActive }), settings: settings, children: header }), footer: footer, disableContentPaddings: disableContentPaddings, className: clsx(styles["container-override"], isActive && styles.active), children: children }), resizeHandle && (_jsx("div", { className: styles.resizer, children: _jsx(ResizeHandle, { ariaLabelledBy: resizeHandleAriaLabelledBy, ariaDescribedBy: resizeHandleAriaDescribedBy, onPointerDown: resizeHandle.onPointerDown, onKeyDown: resizeHandle.onKeyDown, isActive: resizeHandle.isActive }) })), _jsx(ScreenreaderOnly, { id: dragHandleAriaLabelledBy, children: i18nStrings.dragHandleAriaLabel }), _jsx(ScreenreaderOnly, { id: dragHandleAriaDescribedBy, children: i18nStrings.dragHandleAriaDescription }), _jsx(ScreenreaderOnly, { id: resizeHandleAriaLabelledBy, children: i18nStrings.resizeHandleAriaLabel }), _jsx(ScreenreaderOnly, { id: resizeHandleAriaDescribedBy, children: i18nStrings.resizeHandleAriaDescription })] }));
+    return (_jsxs("div", { ref: __internalRootRef, className: styles.root + (className?` ${className}`:''), ...getDataAttributes(rest), children: [_jsx(Container, { fitHeight: true, disableHeaderPaddings: true, header: _jsx(WidgetContainerHeader, { handle: _jsx(DragHandle, { ref: dragHandle.ref, ariaLabelledBy: dragHandleAriaLabelledBy, ariaDescribedBy: dragHandleAriaDescribedBy, onPointerDown: dragHandle.onPointerDown, onKeyDown: dragHandle.onKeyDown, isActive: dragHandle.isActive }), settings: settings, children: header }), footer: footer, disableContentPaddings: disableContentPaddings, className: clsx(styles["container-override"], isActive && styles.active), children: children }), resizeHandle && (_jsx("div", { className: styles.resizer, children: _jsx(ResizeHandle, { ariaLabelledBy: resizeHandleAriaLabelledBy, ariaDescribedBy: resizeHandleAriaDescribedBy, onPointerDown: resizeHandle.onPointerDown, onKeyDown: resizeHandle.onKeyDown, isActive: resizeHandle.isActive }) })), _jsx(ScreenreaderOnly, { id: dragHandleAriaLabelledBy, children: i18nStrings.dragHandleAriaLabel }), _jsx(ScreenreaderOnly, { id: dragHandleAriaDescribedBy, children: i18nStrings.dragHandleAriaDescription }), _jsx(ScreenreaderOnly, { id: resizeHandleAriaLabelledBy, children: i18nStrings.resizeHandleAriaLabel }), _jsx(ScreenreaderOnly, { id: resizeHandleAriaDescribedBy, children: i18nStrings.resizeHandleAriaDescription })] }));
 }
 //# sourceMappingURL=internal.js.map
\ No newline at end of file
diff --git a/board-item/styles.css.js b/board-item/styles.css.js
index 1dcaf7ccab588a3e3a1a9bfdab40d1b3e7d4a69f..39416d9d804f3addcea8a70836da994802028526 100644
--- a/board-item/styles.css.js
+++ b/board-item/styles.css.js
@@ -1,16 +1,17 @@
+import './styles.scoped.css';
 
-    import './styles.scoped.css';
-    export default {
-  "root": "awsui_root_9ckv7_1974t_1",
-  "container-override": "awsui_container-override_9ckv7_1974t_6",
-  "active": "awsui_active_9ckv7_1974t_6",
-  "header": "awsui_header_9ckv7_1974t_28",
-  "flexible": "awsui_flexible_9ckv7_1974t_34",
-  "handle": "awsui_handle_9ckv7_1974t_38",
-  "refresh": "awsui_refresh_9ckv7_1974t_41",
-  "header-content": "awsui_header-content_9ckv7_1974t_45",
-  "settings": "awsui_settings_9ckv7_1974t_49",
-  "fixed": "awsui_fixed_9ckv7_1974t_57",
-  "resizer": "awsui_resizer_9ckv7_1974t_61"
+export default {
+  root: 'awsui_root_9ckv7_1974t_1',
+  'container-override':
+    'awsui_container-override_9ckv7_1974t_6 bai_board_container-override',
+  active: 'awsui_active_9ckv7_1974t_6',
+  header: 'awsui_header_9ckv7_1974t_28 bai_board_header',
+  flexible: 'awsui_flexible_9ckv7_1974t_34',
+  handle: 'awsui_handle_9ckv7_1974t_38 bai_board_handle',
+  refresh: 'awsui_refresh_9ckv7_1974t_41',
+  'header-content': 'awsui_header-content_9ckv7_1974t_45',
+  settings: 'awsui_settings_9ckv7_1974t_49',
+  fixed: 'awsui_fixed_9ckv7_1974t_57',
+  resizer: 'awsui_resizer_9ckv7_1974t_61 bai_board_resizer',
+  content: 'awsui_content_14iqq_1ml84_220 bai_board_content',
 };
-  
\ No newline at end of file
diff --git a/board-item/styles.scoped.css b/board-item/styles.scoped.css
index 4ec7adae84985a34199e770b659fc9b8f121c4d4..8ecc2cc3e53e9024e9213bf1e827748f59c443f1 100644
--- a/board-item/styles.scoped.css
+++ b/board-item/styles.scoped.css
@@ -4,16 +4,24 @@
 
 /* TODO: use container API instead of styles override */
 .awsui_container-override_9ckv7_1974t_6.awsui_active_9ckv7_1974t_6:not(#\9) {
-  box-shadow: var(--shadow-container-active-kl29x9, 0px 1px 1px 1px #e9ebed, 0px 6px 36px rgba(0, 7, 22, 0.1019607843));
+  box-shadow: var(
+    --shadow-container-active-kl29x9,
+    0px 1px 1px 1px #e9ebed,
+    0px 6px 36px rgba(0, 7, 22, 0.1019607843)
+  );
 }
-[data-awsui-focus-visible] .awsui_container-override_9ckv7_1974t_6.awsui_active_9ckv7_1974t_6:not(#\9) {
+[data-awsui-focus-visible]
+  .awsui_container-override_9ckv7_1974t_6.awsui_active_9ckv7_1974t_6:not(#\9) {
   position: relative;
   box-sizing: border-box;
   outline: 2px dotted transparent;
   outline-offset: -1px;
 }
-[data-awsui-focus-visible] .awsui_container-override_9ckv7_1974t_6.awsui_active_9ckv7_1974t_6:not(#\9)::before {
-  content: " ";
+[data-awsui-focus-visible]
+  .awsui_container-override_9ckv7_1974t_6.awsui_active_9ckv7_1974t_6:not(
+    #\9
+  )::before {
+  content: ' ';
   display: block;
   position: absolute;
   box-sizing: border-box;
@@ -28,7 +36,11 @@
 .awsui_header_9ckv7_1974t_28:not(#\9) {
   display: flex;
   justify-items: center;
-  padding: var(--space-scaled-s-aqzyko, 12px) calc(var(--space-container-horizontal-wfukh3, 20px) - var(--space-scaled-xs-26e2du, 8px));
+  padding: var(--space-scaled-s-aqzyko, 12px)
+    calc(
+      var(--space-container-horizontal-wfukh3, 20px) -
+        var(--space-scaled-xs-26e2du, 8px)
+    );
 }
 
 .awsui_flexible_9ckv7_1974t_34:not(#\9) {
@@ -60,6 +72,14 @@
 
 .awsui_resizer_9ckv7_1974t_61:not(#\9) {
   position: absolute;
-  bottom: calc(var(--space-static-xs-7sfb63, 8px) - var(--space-static-xxxs-3gu9os, 2px));
-  right: calc(var(--space-static-xs-7sfb63, 8px) - var(--space-static-xxxs-3gu9os, 2px));
+  bottom: calc(
+    var(--space-static-xs-7sfb63, 8px) - var(--space-static-xxxs-3gu9os, 2px)
+  );
+  right: calc(
+    var(--space-static-xs-7sfb63, 8px) - var(--space-static-xxxs-3gu9os, 2px)
+  );
+}
+
+.awsui_content_14iqq_1ml84_220 {
+  padding: 0 !important;
 }
diff --git a/board-item/styles.selectors.js b/board-item/styles.selectors.js
index 2acfd3b34f880ec39462ec5d44f7f780e041fbec..e73f107b533a3e0a68d231ede87e2d59d448fe9d 100644
--- a/board-item/styles.selectors.js
+++ b/board-item/styles.selectors.js
@@ -1,17 +1,17 @@
-
-    // es-module interop with Babel and Typescript
-    Object.defineProperty(exports, "__esModule", { value: true });
-    module.exports.default = {
-  "root": "awsui_root_9ckv7_1974t_1",
-  "container-override": "awsui_container-override_9ckv7_1974t_6",
-  "active": "awsui_active_9ckv7_1974t_6",
-  "header": "awsui_header_9ckv7_1974t_28",
-  "flexible": "awsui_flexible_9ckv7_1974t_34",
-  "handle": "awsui_handle_9ckv7_1974t_38",
-  "refresh": "awsui_refresh_9ckv7_1974t_41",
-  "header-content": "awsui_header-content_9ckv7_1974t_45",
-  "settings": "awsui_settings_9ckv7_1974t_49",
-  "fixed": "awsui_fixed_9ckv7_1974t_57",
-  "resizer": "awsui_resizer_9ckv7_1974t_61"
+// es-module interop with Babel and Typescript
+Object.defineProperty(exports, '__esModule', { value: true });
+module.exports.default = {
+  root: 'awsui_root_9ckv7_1974t_1',
+  'container-override':
+    'awsui_container-override_9ckv7_1974t_6 bai_board_container-override',
+  active: 'awsui_active_9ckv7_1974t_6',
+  header: 'awsui_header_9ckv7_1974t_28 bai_board_header',
+  flexible: 'awsui_flexible_9ckv7_1974t_34',
+  handle: 'awsui_handle_9ckv7_1974t_38 bai_board_handle',
+  refresh: 'awsui_refresh_9ckv7_1974t_41',
+  'header-content': 'awsui_header-content_9ckv7_1974t_45',
+  settings: 'awsui_settings_9ckv7_1974t_49',
+  fixed: 'awsui_fixed_9ckv7_1974t_57',
+  resizer: 'awsui_resizer_9ckv7_1974t_61 bai_board_resizer',
+  content: 'awsui_content_14iqq_1ml84_220 bai_board_content',
 };
-  
\ No newline at end of file
diff --git a/internal/grid/styles.css.js b/internal/grid/styles.css.js
index ec202e1a6c757f5513ffa0a2566a1691b8ed18df..0c0ed570ea9c72e7e484c0371825c9710896085c 100644
--- a/internal/grid/styles.css.js
+++ b/internal/grid/styles.css.js
@@ -7,6 +7,5 @@
   "columns-2": "awsui_columns-2_1hw7z_1ywbc_17",
   "columns-4": "awsui_columns-4_1hw7z_1ywbc_21",
   "columns-6": "awsui_columns-6_1hw7z_1ywbc_25",
-  "grid__item": "awsui_grid__item_1hw7z_1ywbc_29"
+  "grid__item": "awsui_grid__item_1hw7z_1ywbc_29 bai_grid_item"
 };
-  
\ No newline at end of file
diff --git a/internal/grid/styles.selectors.js b/internal/grid/styles.selectors.js
index e9bd94ad593d417dc9de17ef419997f48d01a710..cf7bcb13e9a9cae86ad2cefc4f14b066ed5e01ab 100644
--- a/internal/grid/styles.selectors.js
+++ b/internal/grid/styles.selectors.js
@@ -8,6 +8,6 @@
   "columns-2": "awsui_columns-2_1hw7z_1ywbc_17",
   "columns-4": "awsui_columns-4_1hw7z_1ywbc_21",
   "columns-6": "awsui_columns-6_1hw7z_1ywbc_25",
-  "grid__item": "awsui_grid__item_1hw7z_1ywbc_29"
+  "grid__item": "awsui_grid__item_1hw7z_1ywbc_29 bai_grid_item"
 };
   
